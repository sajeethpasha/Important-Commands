
****************kubectl command***************
kubectl get service-url
kubectl get svc
kubectl get nodes -o wide
kubectl get pod
kubectl get deployment

kubectl -h -->this is for help.

kubectl describe pod

kubectl describe deployment ngix-server

kubectl get replicasets

kubectl edit deployment

kubectl logs <pod Name>

/*******to deply application ******************/
kubectl apply -f .\deploy.yml -->deploy a file
kubectl describe service myapp-svc -->to check service file
kubectl get pods -o wide
/*************************************************/

/************Namespaces*******************/
kubectl get namespaces
kubectl create namespace sajeeth-namespace ->to create name spaces
/*****************************************/

kubectl apply -f .\deploy.yaml --namespace=sajeeth-namespace
kubect get deployment -n sajeeth-namespace
kubect get pods -n sajeeth-namespace
kubect delete -f .\deploy.yaml

minikube addons enable ingress

kubectl get deployment -o yaml
kubectl get namespaces


/**Now, run any kubectl command, if you have the deployment yaml file then,...**/
kubectl apply -f <file path with name>
kubectl apply -f ./   --> apply all file

/*** to go inside the container use exit to get out from command*********/
kubectl exec -it ngix-server-5c4dd4bdf4-z8tgf -- bin/bash

kubectl delete deployment nginx-server
kubectl delete -f .\deploy.yml


kubectl get all
kubectl get ignress

kubectl logs --follow [name] --> for Live logs


*****************minikube command***************
choco install minikube  -->to install minikube
minikube start
minikube start --driver=docker
minikube config set driver docker

minikube dashaboard



http://{nodeIp}:{port}/{API URL}
http://192.168.64.14:32208/messag



minikube start --driver=docker


minikube start --insecure-registry true


eval $(minikube -p minikube docker-env)
minikube docker-env

#load image in minikube
minikube image load localhost:5000/service-registry-img:latest



***************************************************************************************************
 kubectl apply -f filename    ===>       To create a deployment/service/configmap based on a given YAML file
 kubectl get all    ===>       To get all the components inside your cluster
 kubectl get pods    ===>       To get all the pods details inside your cluster
 kubectl get pod pod-id    ===>       To get the details of a given pod id
 kubectl describe pod pod-id    ===>       To get more details of a given pod id
 kubectl delete pod pod-id    ===>       To delete a given pod from cluster
 kubectl get services    ===>       To get all the services details inside your cluster
 kubectl get service service-id    ===>       To get the details of a given service id
 kubectl describe service service-id    ===>       To get more details of a given service id
 kubectl get nodes    ===>       To get all the node details inside your cluster
 kubectl get node node-id    ===>       To get the details of a given node
 kubectl get replicasets    ===>       To get all the replica sets details inside your cluster
 kubectl get replicaset replicaset-id    ===>       To get the details of a given replicaset
 kubectl get deployments    ===>       To get all the deployments details inside your cluster
 kubectl get deployment deployment-id    ===>       To get the details of a given deployment
 kubectl get configmaps    ===>       To get all the configmap details inside your cluster
 kubectl get configmap configmap-id    ===>       To get the details of a given configmap
 kubectl get events --sort-by=.metadata.creationTimestamp    ===>       To get all the events occured inside your cluster
 kubectl scale deployment accounts-deployment --replicas=3    ===>       To increase the number of replicas for a deployment inside your cluster
 kubectl set image deployment accounts-deployment accounts=eazybytes/accounts:k8s    ===>       To set a new image for a deployment inside your cluster
 kubectl rollout history deployment accounts-deployment    ===>       To know the rollout history for a deployment inside your cluster
 kubectl rollout undo deployment accounts-deployment --to-revision=1    ===>       To rollback to a given revision for a deployment inside your cluster
 kubectl autoscale deployment accounts-deployment --min=3 --max=10 --cpu-percent=70    ===>       To create automatic scaling using HPA for a deployment inside your cluster
 kubectl logs node-id    ===>       To get a logs of a given node inside your cluster
************************************************************************************************** 






